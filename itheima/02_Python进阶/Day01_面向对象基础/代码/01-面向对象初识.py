"""
问题: 什么是面向对象?
答案:
    思路: 概述, 特点, 举例, 总结.
    面向对象是一种编程思维, 强调的是 以对象 为基础 完成各种操作, 它是基于 面向过程的.
    说到面向对象, 不得不提的就是它的三大特点:
        1. 面向对象更符合人们的思考习惯.
        2. 把复杂的事情简单化.
        3. 把程序员从执行者变成指挥者.
    举个例子吧:
        越接近当时的场景越好.
    总结:
        一切皆对象.

面向对象相关概述:
    属性: 名词, 用来描述事物的外在特征的. 例如: 姓名, 年龄, 身高, 体重...   就是以前我们写的: 变量.
    行为: 动词, 表示事物能够做什么, 例如: 吃饭, 睡觉, 学习...             就是以前我们写的: 函数.
    类: 属性和行为的集合, 抽象的概念, 看不见, 摸不着.
    对象: 类的具体体现, 实现.

面向对象三大特征:
    封装:
        概述: 就是隐藏对象的属性和实现细节, 仅对外提供公共的访问方式.       例如: ATM存取款机.
        好处:
            1. 提高代码的安全性.
            2. 提高代码的复用性.        我们以前常用的函数, 也是封装的一种体现.
        弊端:
            代码量增加了.
    继承:
        概述:
          因为有了封装, 代码量增加了, 我们可以通过继承来解决(这个弊端).
          实际开发中, 我们发现多个类中的部分内容是相似的, 或者是相同, 每次写, 很麻烦, 针对于这种情况,
          我们可以把这些相似的内容提取出来单独的放到1个类中, 然后让那多个类和这个类产生关系, 这个关系就叫继承.
        格式:
            class 类名(父类名):
                pass
        好处:
            1. 提高代码的 复用性.
            2. 提高代码的 可维护性.
        弊端:
            耦合性增强了, 父类不好的成员, 子类想没有都不行(当前, 后续我们会学私有, 子类就无法访问了)
    多态:
        概述:
            同一个事物在不同时刻表现出来的不同状态, 形态.
        例如:
            一杯水, 高温: 气体, 低温: 固体, 常温: 液体.
            你: 学生, 顾客, 消费者, 司机, 厨师, 导游...
        好处:
            1. 提高代码的 可维护性
            2. 降低了类与类的耦合性.
                专业词: 高内聚, 低耦合.
                    内聚: 指的是类独立处理问题的能力. 
                    耦合: 指的是类与类之间的关系.
"""