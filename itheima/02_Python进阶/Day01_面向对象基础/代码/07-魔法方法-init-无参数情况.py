"""
案例: 演示魔法方法 init()之 无参数情况.

魔法方法解释:
    概述:
        在Python中, 有一类方法是用来 对Python类的功能做 加强(扩展)的, 且这一类方法都无需手动调用.
        在满足特定情况的场景下, 会被自动调用, 它们就称之为: 魔法方法.
    格式:
        __魔法方法名__()      注意, 这里是两个下划线.
    常用的魔法方法:
        __init__()      用于初始化对象的属性值的, 在创建对象的时候, 会被: 自动调用.           c1 = Car()
        __str__()       用于快速打印对象的各个属性值的, 在输出语句打印对象的时候会自动调用.     print(c1)
        __del__()       当删除对象的时候, 或者main函数执行完毕后, 会自动调用.
"""

# 需求: 给车类的所有对象, 默认设置 颜色为黑色, 轮胎数为3 这两个属性值.
# 场景1: 不使用魔法方法.
# class Car:
#     pass


# 场景2: 使用魔法方法
class Car:      # Python类的命名, 遵循: 大驼峰命名法. 例如: HelloWorld
    # 魔法方法 __init__()完成, 对 属性 的初始化操作.
    def __init__(self):
        self.color = '黑色'
        self.number = 3


# main函数, 一般用于写: 测试代码
if __name__ == '__main__':
    c1 = Car()              # 创建对象, 会自动调用 init()魔法方法
    # 如下的格式就不是 定义属性了, 而是 修改属性值.
    c1.color = '红色'
    c1.number = 4
    print(f'汽车颜色: {c1.color}, 轮胎数: {c1.number}')        # 红色, 4

    c2 = Car()              # 创建对象, 会自动调用 init()魔法方法
    # c2.color = '黑色'
    # c2.number = 3
    print(f'汽车颜色: {c2.color}, 轮胎数: {c2.number}')        # 黑色, 3