"""
回顾:
    属性: 名词, 用来描述事物的外在特征的. 例如: 姓名, 年龄, 身高, 体重...   就是以前我们写的: 变量.
    行为: 动词, 表示事物能够做什么, 例如: 吃饭, 睡觉, 学习...             就是以前我们写的: 函数.
    类: 属性和行为的集合, 抽象的概念, 看不见, 摸不着.
    对象: 类的具体体现, 实现.

简单理解:
    类 = 属性 + 行为 = 名词 + 动词.

格式:
    1. 定义类的格式.
        class 类名:
            pass

        class 类名():
            pass

        class 类名(object):
            pass

    2. (根据类)创建对象的格式.
        对象名 = 类名()

    3. 如何调用类中的成员.
        对象名.成员...
"""

# 需求: 定义汽车类, 有 跑的功能, 创建汽车类对象, 并调用跑的行为.
# 1. 定义类.
# 格式1
class Car:
    # 定义跑的功能, 充当动词, 即: 行为.
    def run(self):  # self代表: 本类当前对象的引用, 下个视频详解, 目前先了解.
        print('汽车会跑.')

# 格式2
# class Car():
#     # 定义跑的功能, 充当动词, 即: 行为.
#     def run(self):  # self代表: 本类当前对象的引用, 下个视频详解, 目前先了解.
#         print('汽车会跑.')

# 格式3
# class Car(object):      # object是所有类的父类, 所有的类都直接或者间接继承自object.
#     # 定义跑的功能, 充当动词, 即: 行为.
#     def run(self):  # self代表: 本类当前对象的引用, 下个视频详解, 目前先了解.
#         print('汽车会跑.')


# 2. 在main方法中, 创建对象, 并测试行为.
if __name__ == '__main__':
    # 创建对象
    c1 = Car()
    c2 = Car()

    # 调用行为.
    c1.run()
    c2.run()

