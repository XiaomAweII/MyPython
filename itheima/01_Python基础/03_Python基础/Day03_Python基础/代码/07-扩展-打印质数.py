"""
需求:
    打印 1 ~ 100之间所有的质数, 按照 3个一行的方式进行输出.

质数解释:
    1. 只能被1 和 自身整除的数字, 就称之为 质数, 质数 也叫 素数.
    2. 最小的质数是 2

分析思路, 例如: 判断 10 是否是质数
    1. 获取到 2 ~ 5(10的一半) 的值.
    2. 和 10进行取余操作, 但凡有一组能整除, 说明10不是质数.
    3. 无需判断后续的操作了, 直接判断 下个数字.
        例如: 10 % 2 = 0, 说明10不是质数, 没必要接着判断 10 % 3  而是直接判断 11(下个数字)是否是质数即可.
"""

# 场景1: 分解版写法.
# 1. 定义计数器 count, 表示 质数的个数.
count = 0
# 2. 获取到 1 ~ 100之间 所有的整数.
for i in range(2, 101):             # i 表示 要判断是否为 质数的数字, 例如:  10             13
    # 3. 获取到 2 ~ i的一半之间, 所有的整数, 一会儿和i进行取余操作.
    for j in range(2, i // 2 + 1):  # j 表示 要进行取余操作的数字,   例如:   2,3,4,5        2,3,4,5,6
        # 4. 具体的判断动作, 看其是否是质数.
        if i % j == 0:              # 10 % 2,  10 % 3,  10 % 4,  10 % 5               13 % 2, 13 % 3...
            # 5. 走到这里, 说明 i 不是质数, 没必要继续判断i了, 直接判断 i + 1即可.
            break
    else:
        # 6. 走到这里, 说明 不是break方式结束的, 说明 i 是质数.
        count += 1      # 计数器 + 1
        if count % 3 == 0:
            print(i, end='\n')
        else:
            print(i, end='\t')

print()
print('-' * 28)


# 场景2: 合并版写法.
# 1. 定义计数器 count, 表示 质数的个数.
count = 0
# 2. 获取到 1 ~ 100之间 所有的整数.
for i in range(2, 101):             # i 表示 要判断是否为 质数的数字, 例如:  10             13
    # 3. 获取到 2 ~ i的一半之间, 所有的整数, 一会儿和i进行取余操作.
    for j in range(2, i // 2 + 1):  # j 表示 要进行取余操作的数字,   例如:   2,3,4,5        2,3,4,5,6
        # 4. 具体的判断动作, 看其是否是质数.
        if i % j == 0:              # 10 % 2,  10 % 3,  10 % 4,  10 % 5               13 % 2, 13 % 3...
            # 5. 走到这里, 说明 i 不是质数, 没必要继续判断i了, 直接判断 i + 1即可.
            break
    else:
        # 6. 走到这里, 说明 不是break方式结束的, 说明 i 是质数.
        count += 1      # 计数器 + 1
        print(i, end='\n' if count % 3 == 0 else '\t')

print()
print('-' * 28)


# 场景3: 算法(公式)实现.
# 规律: 2 ~ 100之间的质数, 只要是 2, 3, 5, 7 或者 不能被其中所有的整数 整除, 该数字就是: 数值.
count = 0
for i in range(2, 101):
    # 条件1: 是2, 3, 5, 7      或者  条件2: 不能被2,3,5,7 任意1个数字整除.
    if i in (2, 3, 5, 7) or (i % 2 != 0 and i % 3 != 0 and i % 5 != 0 and i % 7 != 0):
        count += 1
        print(i, end = '\n' if count % 3 == 0 else '\t')

