"""
字典遍历介绍:
    概述:
        所谓的遍历, 就是逐个获取容器中 每个元素的操作.
    字典遍历方式:
        思路1: 根据 键 获取其对应的值.              理解为: 根据 丈夫 找 妻子.
        思路2: 根据 键值对 获取其对应的 键 和 值.    理解为: 根据 结婚证 找 丈夫 和 妻子.
"""
# 1. 定义字典, 记录: 键值对元素.
dict1 = {'乔峰': '阿朱', '虚竹': '梦姑', '杨过': '小龙女', '郭靖': '黄蓉'}


# 2. 遍历字段.
# 思路1: 根据 键 获取其对应的值.              理解为: 根据 丈夫 找 妻子.
# 2.1 获取到所有的键.      类似于: 获取所有的丈夫.
keys = dict1.keys()

# 2.2 遍历, 获取到每个键.  类似于: 获取到具体的某1个丈夫.
for key in keys:
    # 2.3 根据 键 找 值.      类似于: 根据 丈夫 找 妻子.
    value = dict1.get(key)
    print(f'{key} <=> {value}')  # 打印结果

print('-' * 28)

# 上述格式简化写法.
for key in dict1.keys():
    print(f'{key} <=> {dict1.get(key)}')  # 打印结果

print('-' * 28)


# 思路2: 根据 键值对 获取其对应的 键 和 值.    理解为: 根据 结婚证 找 丈夫 和 妻子.
# 2.1 获取所有的 键值对对象.      即: 获取所有的 结婚证.
items = dict1.items()
# 2.2 遍历, 获取到每个键值对.     即: 获取到 每个结婚证.
for item in items:
    # print(item)     # 每个键值对, 例如: ('乔峰', '阿朱'), ('虚竹', '梦姑')...

    # 2.3 根据 键值对 找键和值.       即: 根据结婚证找 丈夫 和 妻子.
    key, value = item[0], item[1]
    print(f'{key} <=> {value}')  # 打印结果

print('-' * 28)

# 上述格式简化写法.
for item in dict1.items():
    # key, value = item[0], item[1]
    print(f'{item[0]} <=> {item[1]}')  # 打印结果

print('-' * 28)

# 实际开发写法, 拆包(后续详解)
for k,v in dict1.items():       # 等价于:   k, v = ('键', '值')
    # key, value = item[0], item[1]
    print(f'{k} <=> {v}')  # 打印结果

print('-' * 28)


# 扩展: 拆包写法.
t1 = ('abc', 'bcd')
a, b = t1       # 拆包写法, a 和 b 分别表示 元组t1的前两个元素.
print(a)
print(b)


# 买牌, 54张牌.
poker = ['♥A', '♠A', '♣A', '♦A', '小王', '大王']

# 洗牌

# 发牌
player1 = []        # 17张
player1 = []        # 17张
player1 = []        # 17张
dipai = []          # 3张


# 看牌, 按照 牌的 大小排序, 然后查看.
player1 = []        # 17张           ♥3, ♠3, ♦4, ♠10, ♥J, ♣K, ♦2, 小王, 大王
player1 = []        # 17张
player1 = []        # 17张
dipai = []          # 3张