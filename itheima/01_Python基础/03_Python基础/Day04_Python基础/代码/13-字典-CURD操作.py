"""
演示字典的常用 函数 如下:
    增:  字典名[键名] =  值
    删:  del 字典名   或者 clear()
    改:  字典名[键名] =  值
    查:  get(), keys(), values(), items()

字典使用细节:
    1. 字典存储的是键值对元素, 键具有唯一性, 值可以重复.
    2. 字典属于可变类型, 其元素值可以修改.
"""

# 1. 定义变量, 表示: 字典.
dict1 = {'杨过':'小龙女', '郭靖':'黄蓉', '张无忌':'如花'}

# 2. 演示 字典相关的 函数.
# 增:  字典名[键名] =  值
dict1['刘怡铭'] = '金莲'      # 键不存在, 就添加该键值对.

# 删:  del 字典名   或者 clear()
# dict1.clear()       # 清空元素(即: 删除所有的键值对)
# del dict1           # 从内存中删除该字典.
# del dict1['郭靖']     # 根据键, 删除该键值对.

# 改:  字典名[键名] =  值
dict1['刘怡铭'] = '如花'

# 3. 打印字典内容.
print(f'dict1: {dict1}')
print('-' * 28)


# 查:  get(), keys(), values(), items()
# get(键, 默认值)       根据键获取值, 如果键不存在, 就获取默认值.
print(dict1.get('杨过'))              # 小龙女
print(dict1.get('杨过', '李四'))       # 小龙女

print(dict1.get('乔峰'))              # None
print(dict1.get('乔峰', '张三'))       # 张三
print('-' * 28)

# keys() 获取字典中所有的键.
print(dict1.keys())     # dict_keys(['杨过', '郭靖', '张无忌', '刘怡铭'])

# values() 获取字典中所有的值.
print(dict1.values())   # dict_values(['小龙女', '黄蓉', '如花', '如花'])

# items()   把 每对键值对元素 封装成 元组, 然后再放到 列表中.
print(dict1.items())        # 列表 嵌套 元组, 即:  dict_items([('杨过', '小龙女'), ('郭靖', '黄蓉'), ('张无忌', '如花'), ('刘怡铭', '如花')])
