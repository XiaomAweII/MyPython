"""
递归 介绍:
    概述:
        递归指的是 函数自己调用自己的情况.
    细节:
        1. 递归必须要有出口, 否则: 就是死递归, 容易造成 栈内存溢出.
        2. 递归不能调用次数过多, 否则: 容易造成 栈内存溢出.
        3. 递归必须要有 规律, 即: 重复做的事儿.
        4. 总结, 搞定递归很简单, 只要: 分析出 出口 和 规律即可.
    经典案例:
        1. 求阶乘.
        2. 斐波那契数列, 也叫: 不死神兔.


# 需求: 求5的阶乘, 分析流程如下:
    5! = 5 * 4 * 3 * 2 * 1                     ---
         5 * 4!                                 |
             4 * 3!                            规律
                 3 * 2!                         |
                     2 * 1!                    ---
                         1! = 1                 出口

总结:
    出口: 1! = 1
    规律: n! = n * (n - 1)!
"""

# 需求: 求5的阶乘.   5! = 5 * 4 * 3 * 2 * 1
# 1. 定义函数 factorial(n), 计算: n的阶乘.
def factorial(n):
    # 出口: 1! = 1
    if n == 1:
        return 1

    # 规律: n! = n * (n - 1)!
    return n * factorial(n - 1)



# 2. 调用 factorial()函数.
if __name__ == '__main__':
    print(factorial(5))