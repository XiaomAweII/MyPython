"""
网络编程相关介绍:
    概述:
        网络编程也叫套接字编程, Socket编程, 即: 通信两端都独有自己的Socket对象, 数据在Socket之间通过 文件流 或者 数据报包的形式传输.
    大白话:
        网编就是用来实现 网络互联的 不同计算机上 运行的程序间 可以进行数据交互.
    网编三要素:
        IP地址:
            概述:
                设备(电脑, 手机, IPad, 手表...)在网络中的唯一标识.
            分类:
                IPV4: 采用 4字节, 十进制形式组成.
                IPV6: 采用 16字节, 十六进制组成.
            IPV4 划分:  例如: 192.168.28.98
                城域网: 第1段是网关地址, 后3段是 主机地址,  即: 1 + 3,  例如: 10.?.?.?   10.1.1.0
                校园网(广域网): 2 + 2
                局域网: 3 + 1, 例如: 192.168.28.?
            关于IP常用的两个命令:
                ipconfig            查看本机IP, windows系统用这个,  如果是linux 或者 mac系统, 用 ifconfig
                ping ip地址或者域名   测试网络连接是否通畅.
        端口号:
            概述:
                1个端口 = 1个端口号, 端口号是: 程序在设备上的唯一标识.
            范围:
                0 ~ 65535, 其中  0 ~ 1023已经被系统占用或者用作保留端口, 你在用的时候, 尽量规避这个号段.
            如何查看端口号?
                windows系统:      netstat -ano
                mac系统, Linux:   netstat -anp
        协议:
            概述:
                通信的规则, 规范.
            分类:
                TCP协议, 类似于: 打电话
                    1. 面向有连接.
                    2. 采用IO流(Input/Output)的方式传输数据, 理论上来讲, 数据无大小限制.
                    3. 安全(可靠)协议.
                    4. 效率相对较低.
                    5. 区分客户端和服务器端.
                UDP协议, 类似于: 群聊.
                    1. 面向无连接.
                    2. 采用数据报包(Package)的形式传输数据, 每个包大小不能超过64KB.
                    3. 不安全(不可靠)协议.
                    4. 效率相对较高.
                    5. 不区分客户端和服务器端,叫: 发送端 和 接收端.

    网络通信原理:
        通信两端都有Socket对象(套接字对象), 数据在两个Socket对象之间通过 数据报包 或者 IO流的方式进行传输.

    Socket对象创建步骤:
        1. 导包.
        2. 创建Socket对象.
        3. 关闭, 释放资源.
"""

# 1. 导包
import socket


# 2. 创建socket对象.
# 参1: Address Family, 地址族, 即: 表示用何种IP规则来解析, 例如: IpV4, IpV6...    AF_INET 代表 IPV4
# 参2: 表示传输方式, Stream(流)的意思, 表示用: 字节流(二进制形式)传输数据.
cli_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)      # client(客户端)

# 3. 打印 socket对象, 看是否创建成功.
print(cli_socket)

# 4. 释放资源.
cli_socket.close()