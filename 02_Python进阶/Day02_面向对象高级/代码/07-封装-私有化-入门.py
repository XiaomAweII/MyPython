"""
封装 解释:
    概述:
        在Python中, 我们定义函数的动作, 叫: 封装.
        在Python中, 我们定义类, 类中有属性 和 行为, 这个动作: 也叫封装.
    专业版话述:
        封装就是隐藏对象的 属性 和 实现细节, 仅对外提供公共的访问方式.
    问1: 怎么隐藏?
    答案: 私有化的方式, __ 注意, 这里是 两个下划线.

    问2: 公共的访问方式是什么?
    答案: 就是自己提供的对外访问内部成员的接口(方式), 例如: get_xxx(), set_xxx()

    问3: 目前我们所学的内容, 子类可以从父类继承过来所有的 属性 和 行为, 那如果父类的某些 属性和行为不让子类继承, 如何实现呢?
    答案: 可以通过 私有化解决.

私有化介绍:
    概述:
        被它修饰的内容, 只能在 本类中 直接访问.
    格式:
        __属性名           注意: 这里是 两个 _
        __函数名()
    特点:
        私有化成员, 子类无法继承, 只能本类使用.  如果子类想访问, 必须通过提供的 公共的访问方式(接口)
"""

# 故事6: 小明把技术传给徒弟的同时, 不想把自己的私房钱继承给徒弟, 请用所学, 模拟该知识.

# 1. 定义 徒弟类.
class Prentice(object):
    # 1.1 初始化属性.
    def __init__(self):
        self.kongfu = '[自研 摊煎饼果子技术]'
        self.__money = 500        # 徒弟的私房钱, 私有化了.

    # 1.2 行为, 摊煎饼.
    def make_cake(self):
        print(f'采用 {self.kongfu} 制作煎饼!')

    # 1.3 定义公共的访问方式(接口), 查看 私房钱.
    def get_money(self):
        return self.__money

    # 1.4 定义公共的访问方式(接口), 修改 私房钱.
    def set_money(self, money):
        self.__money = money


# 2. 定义 徒孙类, 继承子 徒弟类.
class TuSun(Prentice):
    pass

# main方法中测试.
if __name__ == '__main__':
    # 3. 创建 徒孙类对象.
    ts = TuSun()
    # 4. 尝试访问 从父类(徒弟类)中继承过来的内容.
    print(ts.kongfu)
    ts.make_cake()

    # 5. 尝试访问 父类(徒弟类)的私房钱.
    # print(f'(徒孙) 看到了 (徒弟)的私房钱: {ts.money}')
    # print(f'(徒孙) 看到了 (徒弟)的私房钱: {ts.__money}')
    print(f'(徒孙) 看到了 (徒弟)的私房钱: {ts.get_money()}')

    # 修改 徒弟的私房钱.
    ts.set_money(666666666)

    print(f'(徒孙) 看到了 (徒弟)的私房钱: {ts.get_money()}')


