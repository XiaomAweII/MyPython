"""
属性 介绍:
    概述:
        属性 = 名词, 就是描述事物的外在特征的, 例如: 姓名, 年龄, 性别...
    分类:
        对象属性: 属于每个对象的属性, 即: A对象修改了他的属性值, 不会影响B对象的属性值.
        类属性:   它是属于该类的所有对象 所共享的, 即: A对象修改了类属性, 则B对象用的是 修改后的属性值.

对象属性 相关格式:
    定义格式:
        类外: 对象名.属性名 = 属性值
        类内: self.属性名 = 属性值
    获取属性值的格式:
        类外: 对象名.属性名
        类内: self.属性名

类属性:
    定义格式:
        定义在类中, 函数外的 变量, 就叫: 类变量, 它能被该类下所有的对象所共享.
    调用格式:
        方式1: 类名.类属性名            # 推荐使用.
        方式2: 对象名.类属性名          # 可以用, 但是不推荐.

细节: 什么时候定义类变量, 什么时候定义对象变量?
    如果1个变量是被该类下所有的对象所共享的, 就考虑定义成: 类变量(类属性), 否则定义成: 对象变量(对象属性).
"""

# 需求: 定义学生类, 有 name属性,  teacher_name属性, 创建学生类对象, 并测试. 请用所学, 模拟该知识.

# 1. 定义学生类.
class Student(object):
    # 1.1 老师名字.
    teacher_name = '夯哥'            # 类属性, 每个对象所共享.

    # 1.2 name属性, 每个学生的名字都不一样, 所以定义成: 对象属性.
    def __init__(self):
        self.name = '张三'            # 对象属性.


# 在main方法中调用
if __name__ == '__main__':
    # 2. 创建学生类对象.
    s1 = Student()
    s2 = Student()

    # 3. 打印对象属性值.
    print(f's1对象的 对象属性: {s1.name}')     # '张三'
    print(f's2对象的 对象属性: {s2.name}')     # '张三'
    # 4. 修改s1的对象属性值.
    s1.name = '王五'
    # 5. 重新打印对象属性值.
    print(f's1对象的 对象属性: {s1.name}')     # '王五'
    print(f's2对象的 对象属性: {s2.name}')     # '张三'

    # 6. 打印 类属性值.
    print(f's1对象的 类属性: {s1.teacher_name}')  # '夯哥'
    print(f's2对象的 类属性: {s2.teacher_name}')  # '夯哥'
    # 7. 修改s1的类属性值.
    Student.teacher_name = '梅婷'
    # 8. 重新打印 类属性值.
    print(f's1对象的 类属性: {s1.teacher_name}')  # '梅婷'
    print(f's2对象的 类属性: {s2.teacher_name}')  # '梅婷'

    # 9. 类属性, 推荐使用 类名.的方式调用.
    print(Student.teacher_name)