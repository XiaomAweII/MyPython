"""
nonlocal 关键字介绍:
    概述:
        它是1个关键字, 可以实现 让内部函数 去修改 外部函数的变量值.
    回顾:
        global      声明变量为 全局变量
        nonlocal    声明变量 可以被 内部函数修改.
"""

# 需求: 编写1个闭包, 让内部函数去访问外部函数的变量, 并修改它的值. 观察结果.
# 1. 定义闭包代码, 让: 内部函数去访问外部函数的变量, 并修改它的值.
def fn_outer():         # 外部函数
    a = 100             # 外部函数的 变量

    def fn_inner():     # 内部函数, 有嵌套.
        # 核心细节, 内部函数想修改外部函数的变量, 该变量必须用nonlocal修饰.
        nonlocal a
        a = a + 1       # 在内部函数中, 去修改外部函数的变量.       有引用
        print(f'a的值: {a}')

    return fn_inner     # 有返回, 返回: 内部函数对象

# 在main函数中调用.
if __name__ == '__main__':
    fn = fn_outer()         # fn 其实等价于 fn_inner 这个函数.
    fn()                    # 101
    fn()                    # 102
    fn()                    # 103

