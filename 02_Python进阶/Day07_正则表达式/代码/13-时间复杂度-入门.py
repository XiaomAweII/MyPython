"""
数据结构 和 算法介绍:
    概述/目的:
        1. 掌握好数据结构 和 算法, 可以大大提升程序的性能.
        2. 面试的高频考点.
        3. 程序 = 数据结构 + 算法
    名词解释:
        数据结构: 存储 和 组织数据的方式, 例如: 栈, 堆, 队列, 数组, 链表, 树...
        算法:    为了解决实际业务问题, 而想出来的 办法 或者 思路.

    算法:
        具有独立性, 即: 它不依赖编程语言, 用Java, Python等都能实现, 它是解决问题的思路和方法.
        特点:
            1. 有输入.
            2. 有输出.
            3. 有穷性.
            4. 确定性.
            5. 可行性.

"""
import time
# 案例1: 演示 穷举法.
# 需求: 已知 a + b + c = 1000, 且 a ** 2 + b ** 2 = c ** 2, 请问: a, b, c的组合方式有哪些?
start = time.time()

# 思路1: 穷举法.
for a in range(1, 1001):
    for b in range(1, 1001):
        for c in range(1, 1001):
            # if a ** 2 + b ** 2 == c ** 2 and a + b + c == 1000:   # 最慢的思路.
            if a + b + c == 1000 and a ** 2 + b ** 2 == c ** 2:     # 比上边那种方式快点.
                print(a, b, c)


# 思路2: 代入法.
for a in range(1, 1001):
    for b in range(1, 1001):
        c = 1000 - a - b
        # if a ** 2 + b ** 2 == c ** 2 and a + b + c == 1000:   # 最慢的思路.
        if a ** 2 + b ** 2 == c ** 2:     # 比上边那种方式快点.
            print(a, b, c)

end = time.time()
print(f'共耗时: {end - start} 秒')      # 0.75秒
